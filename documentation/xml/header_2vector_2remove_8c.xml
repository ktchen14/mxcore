<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="header_2vector_2remove_8c" kind="file" language="C++">
    <compoundname>remove.c</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="common_8h" local="yes">common.h</includes>
    <includes refid="remove_8h" local="yes">remove.h</includes>
    <includes refid="access_8h" local="yes">access.h</includes>
    <includes refid="resize_8h" local="yes">resize.h</includes>
    <includedby refid="remove_8h" local="yes">header/vector/remove.h</includedby>
    <incdepgraph>
      <node id="9">
        <label>access.c</label>
        <link refid="header_2vector_2access_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>access.h</label>
        <link refid="access_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdalign.h</label>
      </node>
      <node id="13">
        <label>stdlib.h</label>
      </node>
      <node id="12">
        <label>errno.h</label>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="1">
        <label>header/vector/remove.c</label>
        <link refid="header_2vector_2remove_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>remove.h</label>
        <link refid="remove_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="6">
        <label>common.c</label>
        <link refid="header_2vector_2common_8c"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>resize.c</label>
        <link refid="header_2vector_2resize_8c"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>resize.h</label>
        <link refid="resize_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>header/vector.h</label>
        <link refid="vector_8h"/>
      </node>
      <node id="1">
        <label>header/vector/remove.c</label>
        <link refid="header_2vector_2remove_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>header/vector/remove.h</label>
        <link refid="remove_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>header/vector/shift.c</label>
        <link refid="header_2vector_2shift_8c"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>header/vector/shift.h</label>
        <link refid="shift_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="header_2vector_2remove_8c_1a8758f5d9d876efe39051119a2032c3d2" prot="public" static="no">
        <name>VECTOR_REMOVE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="header/vector/remove.c" line="4" column="9" bodyfile="header/vector/remove.c" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="header_2vector_2remove_8c_1a2738a6125160c41fe8d9d81606cb3fac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref></type>
        <definition>vector_t vector_remove_z</definition>
        <argsstring>(vector_t vector, size_t i, size_t z)</argsstring>
        <name>vector_remove_z</name>
        <param>
          <type><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref></type>
          <declname>vector</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Remove the element at index <emphasis>i</emphasis> from the <emphasis>vector</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>All elements at indices greater than <emphasis>i</emphasis> are shifted one element toward the head of the <emphasis>vector</emphasis>.</para>
<para>Once the element is removed and subsequent elements are shifted, if the <ref refid="common_8h_1a587cb79957c36c5a87216ec27ab5fdbb" kindref="member">length</ref> of the <emphasis>vector</emphasis> is reduced such that <formula id="0">$ length \le \frac{1}{2}(volume - 1) $</formula>, a <ref refid="resize_8h_1a41c3b52c91171f84f426708a124b9106" kindref="member">vector_resize_z()</ref> will be attempted to reduce the <ref refid="common_8h_1aa15669c7ce377e2da885ecace1d69242" kindref="member">volume</ref> to: <formula id="1">\[ volume = \frac{length \times 6 + 4}{5} \]</formula> On success the shrunk vector will be returned. Otherwise the vector will be returned as is (without the element).</para>
<para>If <emphasis>i</emphasis> isn&apos;t an index in the <emphasis>vector</emphasis> then the behavior is undefined.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to operate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the index in the <emphasis>vector</emphasis> of the element to remove </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the element size of the <emphasis>vector</emphasis> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the resultant vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="header/vector/remove.c" line="18" column="17" bodyfile="header/vector/remove.c" bodystart="18" bodyend="20"/>
        <references refid="header_2vector_2remove_8c_1a337078e9e3a9d47d5cec16808fe9afcc" compoundref="header_2vector_2remove_8c" startline="22" endline="44">vector_excise_z</references>
        <referencedby refid="header_2vector_2shift_8c_1a2328c81eefb3798ffc7c591f22ffe590" compoundref="header_2vector_2shift_8c" startline="16" endline="20">vector_pull_z</referencedby>
        <referencedby refid="remove_8h_1a8b925fa6bad2eee1c956886ccbbd8a2d" compoundref="remove_8h" startline="35" endline="35">vector_remove</referencedby>
        <referencedby refid="header_2vector_2shift_8c_1ac03c1ef96fee473e9f9b858cc64293dc" compoundref="header_2vector_2shift_8c" startline="22" endline="26">vector_shift_z</referencedby>
      </memberdef>
      <memberdef kind="function" id="header_2vector_2remove_8c_1a337078e9e3a9d47d5cec16808fe9afcc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref></type>
        <definition>vector_t vector_excise_z</definition>
        <argsstring>(vector_t vector, size_t i, size_t n, size_t z)</argsstring>
        <name>vector_excise_z</name>
        <param>
          <type><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref></type>
          <declname>vector</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Remove <emphasis>n</emphasis> elements at index <emphasis>i</emphasis> from the <emphasis>vector</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>All elements at indices greater than <computeroutput>i + n</computeroutput> are shifted <emphasis>n</emphasis> elements toward the head of the <emphasis>vector</emphasis>.</para>
<para>Once the elements are removed and subsequent elements are shifted, if the <ref refid="common_8h_1a587cb79957c36c5a87216ec27ab5fdbb" kindref="member">length</ref> of the <emphasis>vector</emphasis> is reduced such that <formula id="0">$ length \le \frac{1}{2}(volume - 1) $</formula>, a <ref refid="resize_8h_1a41c3b52c91171f84f426708a124b9106" kindref="member">vector_resize_z()</ref> will be attempted to reduce the <ref refid="common_8h_1aa15669c7ce377e2da885ecace1d69242" kindref="member">volume</ref> to: <formula id="1">\[ volume = \frac{length \times 6 + 4}{5} \]</formula> On success the shrunk vector will be returned. Otherwise the vector will be returned as is (without the elements).</para>
<para>If <emphasis>i</emphasis> or any index from <emphasis>i</emphasis> to <computeroutput>i + n</computeroutput> inclusive isn&apos;t an index in the <emphasis>vector</emphasis> then the behavior is undefined.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to operate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the index in the <emphasis>vector</emphasis> of the elements to remove </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of elements to remove from the <emphasis>vector</emphasis> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the element size of the <emphasis>vector</emphasis> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the resultant vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="header/vector/remove.c" line="22" column="17" bodyfile="header/vector/remove.c" bodystart="22" bodyend="44"/>
        <references refid="access_8h_1a3d34a65010e7b668473c10be6f6f72e1" compoundref="access_8h" startline="45" endline="45">vector_at</references>
        <references refid="common_8h_1a587cb79957c36c5a87216ec27ab5fdbb" compoundref="common_8h" startline="95" endline="97">vector_length</references>
        <references refid="resize_8h_1a41c3b52c91171f84f426708a124b9106" compoundref="header_2vector_2resize_8c" startline="16" endline="33">vector_resize_z</references>
        <references refid="common_8h_1aa15669c7ce377e2da885ecace1d69242" compoundref="common_8h" startline="91" endline="93">vector_volume</references>
        <referencedby refid="remove_8h_1a67d9f9d3d9367bb743218a1a617d681c" compoundref="remove_8h" startline="84" endline="84">vector_excise</referencedby>
        <referencedby refid="header_2vector_2remove_8c_1a2738a6125160c41fe8d9d81606cb3fac" compoundref="header_2vector_2remove_8c" startline="18" endline="20">vector_remove_z</referencedby>
        <referencedby refid="header_2vector_2remove_8c_1a0858e4516313dfe2716b272e0ad6569f" compoundref="header_2vector_2remove_8c" startline="46" endline="49">vector_truncate_z</referencedby>
      </memberdef>
      <memberdef kind="function" id="header_2vector_2remove_8c_1a0858e4516313dfe2716b272e0ad6569f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref></type>
        <definition>vector_t vector_truncate_z</definition>
        <argsstring>(vector_t vector, size_t length, size_t z)</argsstring>
        <name>vector_truncate_z</name>
        <param>
          <type><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref></type>
          <declname>vector</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Reduce the <ref refid="common_8h_1a587cb79957c36c5a87216ec27ab5fdbb" kindref="member">length</ref> of the <emphasis>vector</emphasis> to <emphasis>length</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>This will remove elements from the tail of the <emphasis>vector</emphasis> until its length is <emphasis>length</emphasis>. The number of elements removed is the difference between <emphasis>length</emphasis> and the length of the <emphasis>vector</emphasis>. The resultant <ref refid="common_8h_1aa15669c7ce377e2da885ecace1d69242" kindref="member">volume</ref> of the <emphasis>vector</emphasis> will follow the rule in <ref refid="remove_8h_1a337078e9e3a9d47d5cec16808fe9afcc" kindref="member">vector_excise_z()</ref>.</para>
<para>If <emphasis>length</emphasis> is greater than the <emphasis>length</emphasis> of the <emphasis>vector</emphasis> then the behavior is undefined.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to operate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the resultant vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the element size of the <emphasis>vector</emphasis> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the resultant vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="header/vector/remove.c" line="46" column="17" bodyfile="header/vector/remove.c" bodystart="46" bodyend="49"/>
        <references refid="header_2vector_2remove_8c_1a337078e9e3a9d47d5cec16808fe9afcc" compoundref="header_2vector_2remove_8c" startline="22" endline="44">vector_excise_z</references>
        <references refid="common_8h_1a587cb79957c36c5a87216ec27ab5fdbb" compoundref="common_8h" startline="95" endline="97">vector_length</references>
        <referencedby refid="remove_8h_1a09045c2cafcc57c6e57ff1ea81a7633f" compoundref="remove_8h" startline="128" endline="128">vector_truncate</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">///<sp/>@file<sp/>header/vector/remove.c</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VECTOR_REMOVE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VECTOR_REMOVE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="remove_8h" kindref="compound">remove.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="access_8h" kindref="compound">access.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="resize_8h" kindref="compound">resize.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VECTOR_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VECTOR_TEST<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="header_2vector_2remove_8c_1a2738a6125160c41fe8d9d81606cb3fac" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref><sp/><ref refid="header_2vector_2remove_8c_1a2738a6125160c41fe8d9d81606cb3fac" kindref="member">vector_remove_z</ref>(<ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref><sp/>vector,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="header_2vector_2remove_8c_1a337078e9e3a9d47d5cec16808fe9afcc" kindref="member">vector_excise_z</ref>(vector,<sp/>i,<sp/>1,<sp/>z);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="header_2vector_2remove_8c_1a337078e9e3a9d47d5cec16808fe9afcc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref><sp/><ref refid="header_2vector_2remove_8c_1a337078e9e3a9d47d5cec16808fe9afcc" kindref="member">vector_excise_z</ref>(<ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref><sp/>vector,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length<sp/>=<sp/><ref refid="common_8h_1a587cb79957c36c5a87216ec27ab5fdbb" kindref="member">vector_length</ref>(vector)<sp/>-<sp/>n;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>the<sp/>existing<sp/>elements<sp/>n<sp/>elements<sp/>toward<sp/>the<sp/>head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*target<sp/>=<sp/><ref refid="access_8h_1a3d34a65010e7b668473c10be6f6f72e1" kindref="member">vector_at</ref>(vector,<sp/>i<sp/>+<sp/>0,<sp/>z);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*source<sp/>=<sp/><ref refid="access_8h_1a3d34a65010e7b668473c10be6f6f72e1" kindref="member">vector_at</ref>(vector,<sp/>i<sp/>+<sp/>n,<sp/>z);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>(length<sp/>-<sp/>i)<sp/>*<sp/>z;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>memmove(target,<sp/>source,<sp/>size);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&lt;=<sp/>(<ref refid="common_8h_1aa15669c7ce377e2da885ecace1d69242" kindref="member">vector_volume</ref>(vector)<sp/>-<sp/>1)<sp/>/<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref><sp/>resize;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>volume<sp/>=<sp/>(length<sp/>*<sp/>6<sp/>+<sp/>4)<sp/>/<sp/>5<sp/>avoiding<sp/>intermediate<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>volume<sp/>=<sp/>length<sp/>/<sp/>5<sp/>*<sp/>6<sp/>+<sp/>((length<sp/>%<sp/>5)<sp/>*<sp/>6<sp/>+<sp/>4)<sp/>/<sp/>5;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((resize<sp/>=<sp/><ref refid="resize_8h_1a41c3b52c91171f84f426708a124b9106" kindref="member">vector_resize_z</ref>(vector,<sp/>volume,<sp/>z))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector<sp/>=<sp/>resize;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>decrease<sp/>the<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>__vector_to_header(vector)-&gt;length<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vector;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="header_2vector_2remove_8c_1a0858e4516313dfe2716b272e0ad6569f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref><sp/><ref refid="header_2vector_2remove_8c_1a0858e4516313dfe2716b272e0ad6569f" kindref="member">vector_truncate_z</ref>(<ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref><sp/>vector,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="common_8h_1a587cb79957c36c5a87216ec27ab5fdbb" kindref="member">vector_length</ref>(vector)<sp/>-<sp/>length;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="header_2vector_2remove_8c_1a337078e9e3a9d47d5cec16808fe9afcc" kindref="member">vector_excise_z</ref>(vector,<sp/><ref refid="common_8h_1a587cb79957c36c5a87216ec27ab5fdbb" kindref="member">vector_length</ref>(vector)<sp/>-<sp/>n,<sp/>n,<sp/>z);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VECTOR_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VECTOR_TEST<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VECTOR_REMOVE_C<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="header/vector/remove.c"/>
  </compounddef>
</doxygen>
