<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="header_2vector_2resize_8c" kind="file" language="C++">
    <compoundname>resize.c</compoundname>
    <includes local="no">errno.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="common_8h" local="yes">common.h</includes>
    <includes refid="resize_8h" local="yes">resize.h</includes>
    <includedby refid="resize_8h" local="yes">header/vector/resize.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>stdalign.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="2">
        <label>errno.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>common.c</label>
        <link refid="header_2vector_2common_8c"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>header/vector/resize.c</label>
        <link refid="header_2vector_2resize_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>resize.h</label>
        <link refid="resize_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>header/vector.h</label>
        <link refid="vector_8h"/>
      </node>
      <node id="6">
        <label>header/vector/remove.c</label>
        <link refid="header_2vector_2remove_8c"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>header/vector/remove.h</label>
        <link refid="remove_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>header/vector/insert.c</label>
        <link refid="header_2vector_2insert_8c"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>header/vector/insert.h</label>
        <link refid="insert_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>header/vector/shift.c</label>
        <link refid="header_2vector_2shift_8c"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>header/vector/shift.h</label>
        <link refid="shift_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>header/vector/resize.c</label>
        <link refid="header_2vector_2resize_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>header/vector/resize.h</label>
        <link refid="resize_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="header_2vector_2resize_8c_1a9e9c1d24171a489ddd9e55da6df289f0" prot="public" static="no">
        <name>VECTOR_RESIZE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="header/vector/resize.c" line="4" column="9" bodyfile="header/vector/resize.c" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="header_2vector_2resize_8c_1a41c3b52c91171f84f426708a124b9106" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref></type>
        <definition>vector_t vector_resize_z</definition>
        <argsstring>(vector_t vector, size_t volume, size_t z)</argsstring>
        <name>vector_resize_z</name>
        <param>
          <type><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref></type>
          <declname>vector</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>volume</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Resize the <ref refid="common_8h_1aa15669c7ce377e2da885ecace1d69242" kindref="member">volume</ref> of the <emphasis>vector</emphasis> to <emphasis>volume</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>If <emphasis>volume</emphasis> is less than the <ref refid="common_8h_1a587cb79957c36c5a87216ec27ab5fdbb" kindref="member">length</ref> of the <emphasis>vector</emphasis> then the <emphasis>vector</emphasis> will be truncated and have its length reduced to <emphasis>volume</emphasis>.</para>
<para>This will fail if the underlying realloc() returns <computeroutput>NULL</computeroutput>. The C standard <bold>doesn&apos;t</bold> guarantee success of a realloc() to a smaller size, so this can fail even if <emphasis>volume</emphasis> is less than the volume of the <emphasis>vector</emphasis>. In either case if the realloc() fails then the <emphasis>vector</emphasis> will be unmodified and the value of <computeroutput>errno</computeroutput> set by realloc() will be retained.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to operate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>volume</parametername>
</parameternamelist>
<parameterdescription>
<para>the volume to resize the <emphasis>vector</emphasis> to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the element size of the <emphasis>vector</emphasis> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the resized vector on success; otherwise <computeroutput>NULL</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="resize_8h_1a676455639015f60171bd43ffa095b960" kindref="member">vector_resize()</ref> - the implicit interface analogue </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="header/vector/resize.c" line="16" column="17" bodyfile="header/vector/resize.c" bodystart="16" bodyend="33"/>
        <referencedby refid="header_2vector_2resize_8c_1aca602cd1c36467c4ab8a8a2aa480a4e2" compoundref="header_2vector_2resize_8c" startline="43" endline="60">vector_ensure_z</referencedby>
        <referencedby refid="header_2vector_2remove_8c_1a337078e9e3a9d47d5cec16808fe9afcc" compoundref="header_2vector_2remove_8c" startline="22" endline="44">vector_excise_z</referencedby>
        <referencedby refid="resize_8h_1a676455639015f60171bd43ffa095b960" compoundref="resize_8h" startline="32" endline="32">vector_resize</referencedby>
        <referencedby refid="header_2vector_2resize_8c_1ae01643697d1f29ca15775f32bc62b525" compoundref="header_2vector_2resize_8c" startline="35" endline="41">vector_shrink_z</referencedby>
      </memberdef>
      <memberdef kind="function" id="header_2vector_2resize_8c_1ae01643697d1f29ca15775f32bc62b525" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref></type>
        <definition>vector_t vector_shrink_z</definition>
        <argsstring>(vector_t vector, size_t z)</argsstring>
        <name>vector_shrink_z</name>
        <param>
          <type><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref></type>
          <declname>vector</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Reduce the volume of the <emphasis>vector</emphasis> to its length. </para>
        </briefdescription>
        <detaileddescription>
<para>This is almost a <ref refid="resize_8h_1a41c3b52c91171f84f426708a124b9106" kindref="member">vector_resize_z()</ref> to the vector&apos;s length. However if the resize fails then the <emphasis>vector</emphasis> will be returned umodified and the value of <computeroutput>errno</computeroutput> set by realloc() will be retained.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to operate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the element size of the <emphasis>vector</emphasis> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the shrunk vector on success; otherwise the unmodified <emphasis>vector</emphasis> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="resize_8h_1a231d716a9dd4b59271a043a0b64de291" kindref="member">vector_shrink()</ref> - the implicit interface analogue </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="header/vector/resize.c" line="35" column="17" bodyfile="header/vector/resize.c" bodystart="35" bodyend="41"/>
        <references refid="common_8h_1a587cb79957c36c5a87216ec27ab5fdbb" compoundref="common_8h" startline="95" endline="97">vector_length</references>
        <references refid="header_2vector_2resize_8c_1a41c3b52c91171f84f426708a124b9106" compoundref="header_2vector_2resize_8c" startline="16" endline="33">vector_resize_z</references>
        <referencedby refid="resize_8h_1a231d716a9dd4b59271a043a0b64de291" compoundref="resize_8h" startline="118" endline="118">vector_shrink</referencedby>
      </memberdef>
      <memberdef kind="function" id="header_2vector_2resize_8c_1aca602cd1c36467c4ab8a8a2aa480a4e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref></type>
        <definition>vector_t vector_ensure_z</definition>
        <argsstring>(vector_t vector, size_t length, size_t z)</argsstring>
        <name>vector_ensure_z</name>
        <param>
          <type><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref></type>
          <declname>vector</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Ensure that the <ref refid="common_8h_1aa15669c7ce377e2da885ecace1d69242" kindref="member">volume</ref> of the <emphasis>vector</emphasis> is at least <emphasis>length</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>If the volume of the <emphasis>vector</emphasis> is less than <emphasis>length</emphasis> then <ref refid="resize_8h_1a41c3b52c91171f84f426708a124b9106" kindref="member">vector_resize_z()</ref> will be called. Preallocation is attempted to accomodate future increases in <ref refid="common_8h_1a587cb79957c36c5a87216ec27ab5fdbb" kindref="member">length</ref> according to the formula: <formula id="2">\[ volume = \frac{length \times 8 + 3}{5} \]</formula> If this preallocation fails then a resize to <emphasis>length</emphasis> will be attempted. If that also fails then the <emphasis>vector</emphasis> will be unmodified.</para>
<para>On success, subsequent insertions (through <ref refid="insert_8h_1a99838caa28553e7237ba9e0693b0e790" kindref="member">vector_insert_z()</ref>, <ref refid="insert_8h_1a52006f26b6f5a04e2961b3dc667b90a3" kindref="member">vector_append_z()</ref>, etc.) into the vector are guaranteed to be successful so long as the resultant length doesn&apos;t exceed <emphasis>length</emphasis>. Note that the <emphasis>vector</emphasis> doesn&apos;t remember this <emphasis>length</emphasis>. As a result calling any functions that can decrease the volume of the <emphasis>vector</emphasis> (like <ref refid="resize_8h_1a41c3b52c91171f84f426708a124b9106" kindref="member">vector_resize_z()</ref>, <ref refid="resize_8h_1ae01643697d1f29ca15775f32bc62b525" kindref="member">vector_shrink_z()</ref>, <ref refid="remove_8h_1a2738a6125160c41fe8d9d81606cb3fac" kindref="member">vector_remove_z()</ref>, etc.) will invalidate this guarantee.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to operate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>the minimum length to accomodate in the <emphasis>vector</emphasis> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the element size of the <emphasis>vector</emphasis> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the resultant vector on success; otherwise <computeroutput>NULL</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="header/vector/resize.c" line="43" column="17" bodyfile="header/vector/resize.c" bodystart="43" bodyend="60"/>
        <references refid="header_2vector_2resize_8c_1a41c3b52c91171f84f426708a124b9106" compoundref="header_2vector_2resize_8c" startline="16" endline="33">vector_resize_z</references>
        <references refid="common_8h_1aa15669c7ce377e2da885ecace1d69242" compoundref="common_8h" startline="91" endline="93">vector_volume</references>
        <referencedby refid="resize_8h_1a0f974d0998a52475443461258ac1ebce" compoundref="resize_8h" startline="78" endline="78">vector_ensure</referencedby>
        <referencedby refid="header_2vector_2insert_8c_1aba8d8fd225d02701f9803ce61989290e" compoundref="header_2vector_2insert_8c" startline="27" endline="54">vector_inject_z</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">///<sp/>@file<sp/>header/vector/resize.c</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VECTOR_RESIZE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VECTOR_RESIZE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="resize_8h" kindref="compound">resize.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VECTOR_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VECTOR_TEST<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="header_2vector_2resize_8c_1a41c3b52c91171f84f426708a124b9106" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref><sp/><ref refid="header_2vector_2resize_8c_1a41c3b52c91171f84f426708a124b9106" kindref="member">vector_resize_z</ref>(<ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref><sp/>vector,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>volume,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__vector_header_t<sp/>*header<sp/>=<sp/>__vector_to_header(vector);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>size<sp/>and<sp/>test<sp/>for<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__builtin_mul_overflow(volume,<sp/>z,<sp/>&amp;size))</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errno<sp/>=<sp/>ENOMEM,<sp/>NULL;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__builtin_add_overflow(size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*header),<sp/>&amp;size))</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errno<sp/>=<sp/>ENOMEM,<sp/>NULL;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((header<sp/>=<sp/>realloc(header,<sp/>size))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((header-&gt;volume<sp/>=<sp/>volume)<sp/>&lt;<sp/>header-&gt;length)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;length<sp/>=<sp/>volume;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>header-&gt;data;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="header_2vector_2resize_8c_1ae01643697d1f29ca15775f32bc62b525" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref><sp/><ref refid="header_2vector_2resize_8c_1ae01643697d1f29ca15775f32bc62b525" kindref="member">vector_shrink_z</ref>(<ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref><sp/>vector,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref><sp/>shrunk;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>shrunk<sp/>=<sp/><ref refid="header_2vector_2resize_8c_1a41c3b52c91171f84f426708a124b9106" kindref="member">vector_resize_z</ref>(vector,<sp/><ref refid="common_8h_1a587cb79957c36c5a87216ec27ab5fdbb" kindref="member">vector_length</ref>(vector),<sp/>z);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shrunk<sp/>!=<sp/>NULL<sp/>?<sp/>shrunk<sp/>:<sp/>vector;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="header_2vector_2resize_8c_1aca602cd1c36467c4ab8a8a2aa480a4e2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref><sp/><ref refid="header_2vector_2resize_8c_1aca602cd1c36467c4ab8a8a2aa480a4e2" kindref="member">vector_ensure_z</ref>(<ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref><sp/>vector,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&lt;=<sp/><ref refid="common_8h_1aa15669c7ce377e2da885ecace1d69242" kindref="member">vector_volume</ref>(vector))</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vector;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>volume<sp/>=<sp/>(length<sp/>*<sp/>8<sp/>+<sp/>3)<sp/>/<sp/>5<sp/>avoiding<sp/>intermediate<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>volume<sp/>=<sp/>length<sp/>/<sp/>5<sp/>*<sp/>8<sp/>+<sp/>((length<sp/>%<sp/>5)<sp/>*<sp/>8<sp/>+<sp/>3)<sp/>/<sp/>5;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>volume<sp/>doesn&apos;t<sp/>overflow<sp/>then<sp/>attempt<sp/>to<sp/>allocate<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(volume<sp/>&gt;<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref><sp/>resize;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((resize<sp/>=<sp/><ref refid="header_2vector_2resize_8c_1a41c3b52c91171f84f426708a124b9106" kindref="member">vector_resize_z</ref>(vector,<sp/>volume,<sp/>z))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resize;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>either<sp/>the<sp/>volume<sp/>overflows<sp/>or<sp/>the<sp/>allocation<sp/>failed<sp/>then<sp/>attempt<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>resize<sp/>to<sp/>just<sp/>the<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="header_2vector_2resize_8c_1a41c3b52c91171f84f426708a124b9106" kindref="member">vector_resize_z</ref>(vector,<sp/>length,<sp/>z);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VECTOR_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VECTOR_TEST<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VECTOR_RESIZE_C<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="header/vector/resize.c"/>
  </compounddef>
</doxygen>
