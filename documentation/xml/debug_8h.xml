<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="debug_8h" kind="file" language="C++">
    <compoundname>debug.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes refid="common_8h" local="yes">common.h</includes>
    <includes refid="header_2vector_2debug_8c" local="yes">debug.c</includes>
    <includedby refid="vector_8h" local="yes">header/vector.h</includedby>
    <includedby refid="header_2vector_2debug_8c" local="yes">header/vector/debug.c</includedby>
    <incdepgraph>
      <node id="9">
        <label>access.c</label>
        <link refid="header_2vector_2access_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>access.h</label>
        <link refid="access_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdalign.h</label>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="10">
        <label>string.h</label>
      </node>
      <node id="5">
        <label>common.c</label>
        <link refid="header_2vector_2common_8c"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
      <node id="6">
        <label>debug.c</label>
        <link refid="header_2vector_2debug_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>header/vector/debug.h</label>
        <link refid="debug_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>header/vector.h</label>
        <link refid="vector_8h"/>
      </node>
      <node id="3">
        <label>header/vector/debug.c</label>
        <link refid="header_2vector_2debug_8c"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>header/vector/debug.h</label>
        <link refid="debug_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="debug_8h_1ac1c63681d97a859a9892be7d7ed911d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vector_debug</definition>
        <argsstring>(vector_c vector, void(*elmt_debug)(const void *elmt))</argsstring>
        <name>vector_debug</name>
        <param>
          <type><ref refid="common_8h_1ae2e5ca5c0f41f2b0bce39bf1b6631122" kindref="member">vector_c</ref></type>
          <declname>vector</declname>
        </param>
        <param>
          <type>void(*)(const void *elmt)</type>
          <declname>elmt_debug</declname>
        </param>
        <briefdescription>
<para>Print debugging information about the <emphasis>vector</emphasis> to <computeroutput>stderr</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to operate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elmt_debug</parametername>
</parameternamelist>
<parameterdescription>
<para>the function that will be called to print debugging information about each element in the <emphasis>vector</emphasis> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="header/vector/debug.h" line="21" column="6" bodyfile="header/vector/debug.h" bodystart="21" bodyend="21"/>
        <references refid="debug_8h_1a32f99733e4c0b0fa96eedf1c15b8b249" compoundref="header_2vector_2debug_8c" startline="15" endline="26">vector_debug_z</references>
      </memberdef>
      <memberdef kind="function" id="debug_8h_1a32f99733e4c0b0fa96eedf1c15b8b249" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vector_debug_z</definition>
        <argsstring>(vector_c vector, void(*elmt_debug)(const void *elmt), size_t z)</argsstring>
        <name>vector_debug_z</name>
        <param>
          <type><ref refid="common_8h_1ae2e5ca5c0f41f2b0bce39bf1b6631122" kindref="member">vector_c</ref></type>
          <declname>vector</declname>
        </param>
        <param>
          <type>void(*)(const void *elmt)</type>
          <declname>elmt_debug</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Print debugging information about the <emphasis>vector</emphasis> to <computeroutput>stderr</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to operate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elmt_debug</parametername>
</parameternamelist>
<parameterdescription>
<para>the function that will be called to print debugging information about each element in the <emphasis>vector</emphasis> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the element size of the <emphasis>vector</emphasis> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="header/vector/debug.h" line="31" column="13" bodyfile="header/vector/debug.c" bodystart="15" bodyend="26" declfile="header/vector/debug.h" declline="31" declcolumn="13"/>
        <references refid="access_8h_1a3d34a65010e7b668473c10be6f6f72e1" compoundref="access_8h" startline="45" endline="45">vector_at</references>
        <references refid="common_8h_1a587cb79957c36c5a87216ec27ab5fdbb" compoundref="common_8h" startline="95" endline="97">vector_length</references>
        <referencedby refid="debug_8h_1ac1c63681d97a859a9892be7d7ed911d5" compoundref="debug_8h" startline="21" endline="21">vector_debug</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">///<sp/>@file<sp/>header/vector/debug.h</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VECTOR_DEBUG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VECTOR_DEBUG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VECTOR_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VECTOR_TEST<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Print<sp/>debugging<sp/>information<sp/>about<sp/>the<sp/>@a<sp/>vector<sp/>to<sp/>@c<sp/>stderr</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>@param<sp/>vector<sp/>the<sp/>vector<sp/>to<sp/>operate<sp/>on</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>@param<sp/>elmt_debug<sp/>the<sp/>function<sp/>that<sp/>will<sp/>be<sp/>called<sp/>to<sp/>print<sp/>debugging</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/>information<sp/>about<sp/>each<sp/>element<sp/>in<sp/>the<sp/>@a<sp/>vector</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//=<sp/>void<sp/>vector_debug(vector_c<sp/>vector,<sp/>void<sp/>(*elmt_debug)(const<sp/>void<sp/>*elmt))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="debug_8h_1ac1c63681d97a859a9892be7d7ed911d5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>vector_debug(v,<sp/>...)<sp/>vector_debug_z((v),<sp/>__VA_ARGS__,<sp/>VECTOR_Z((v)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Print<sp/>debugging<sp/>information<sp/>about<sp/>the<sp/>@a<sp/>vector<sp/>to<sp/>@c<sp/>stderr</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>@param<sp/>vector<sp/>the<sp/>vector<sp/>to<sp/>operate<sp/>on</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>@param<sp/>elmt_debug<sp/>the<sp/>function<sp/>that<sp/>will<sp/>be<sp/>called<sp/>to<sp/>print<sp/>debugging</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/>information<sp/>about<sp/>each<sp/>element<sp/>in<sp/>the<sp/>@a<sp/>vector</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>the<sp/>element<sp/>size<sp/>of<sp/>the<sp/>@a<sp/>vector</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="debug_8h_1a32f99733e4c0b0fa96eedf1c15b8b249" kindref="member">vector_debug_z</ref>(</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1ae2e5ca5c0f41f2b0bce39bf1b6631122" kindref="member">vector_c</ref><sp/>vector,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*elmt_debug)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*elmt),</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>__attribute__((nonnull));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VECTOR_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VECTOR_TEST<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VECTOR_DEBUG_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VECTOR_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="source_2vector_2debug_8c" kindref="compound">debug.c</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VECTOR_TEST<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="header/vector/debug.h"/>
  </compounddef>
</doxygen>
