<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="common_8h" kind="file" language="C++">
    <compoundname>common.h</compoundname>
    <includes local="no">stdalign.h</includes>
    <includes local="no">stddef.h</includes>
    <includes refid="header_2vector_2common_8c" local="yes">common.c</includes>
    <includedby refid="vector_8h" local="yes">header/vector.h</includedby>
    <includedby refid="header_2vector_2common_8c" local="yes">header/vector/common.c</includedby>
    <includedby refid="access_8h" local="yes">header/vector/access.h</includedby>
    <includedby refid="header_2vector_2access_8c" local="yes">header/vector/access.c</includedby>
    <includedby refid="create_8h" local="yes">header/vector/create.h</includedby>
    <includedby refid="header_2vector_2create_8c" local="yes">header/vector/create.c</includedby>
    <includedby refid="comparison_8h" local="yes">header/vector/comparison.h</includedby>
    <includedby refid="header_2vector_2comparison_8c" local="yes">header/vector/comparison.c</includedby>
    <includedby refid="debug_8h" local="yes">header/vector/debug.h</includedby>
    <includedby refid="delete_8h" local="yes">header/vector/delete.h</includedby>
    <includedby refid="header_2vector_2delete_8c" local="yes">header/vector/delete.c</includedby>
    <includedby refid="insert_8h" local="yes">header/vector/insert.h</includedby>
    <includedby refid="header_2vector_2insert_8c" local="yes">header/vector/insert.c</includedby>
    <includedby refid="move_8h" local="yes">header/vector/move.h</includedby>
    <includedby refid="header_2vector_2move_8c" local="yes">header/vector/move.c</includedby>
    <includedby refid="remove_8h" local="yes">header/vector/remove.h</includedby>
    <includedby refid="header_2vector_2remove_8c" local="yes">header/vector/remove.c</includedby>
    <includedby refid="resize_8h" local="yes">header/vector/resize.h</includedby>
    <includedby refid="header_2vector_2resize_8c" local="yes">header/vector/resize.c</includedby>
    <includedby refid="search_8h" local="yes">header/vector/search.h</includedby>
    <includedby refid="header_2vector_2search_8c" local="yes">header/vector/search.c</includedby>
    <includedby refid="shift_8h" local="yes">header/vector/shift.h</includedby>
    <includedby refid="header_2vector_2shift_8c" local="yes">header/vector/shift.c</includedby>
    <includedby refid="sort_8h" local="yes">header/vector/sort.h</includedby>
    <includedby refid="header_2vector_2sort_8c" local="yes">header/vector/sort.c</includedby>
    <includedby refid="vector_8c" local="no">source/vector.c</includedby>
    <includedby refid="source_2vector_2common_8c" local="no">source/vector/common.c</includedby>
    <incdepgraph>
      <node id="2">
        <label>stdalign.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>common.c</label>
        <link refid="header_2vector_2common_8c"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>header/vector/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="27">
        <label>header/vector/sort.c</label>
        <link refid="header_2vector_2sort_8c"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>header/vector/sort.h</label>
        <link refid="sort_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>header/vector.h</label>
        <link refid="vector_8h"/>
      </node>
      <node id="5">
        <label>header/vector/access.c</label>
        <link refid="header_2vector_2access_8c"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>header/vector/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>header/vector/search.c</label>
        <link refid="header_2vector_2search_8c"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>header/vector/search.h</label>
        <link refid="search_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>source/vector.c</label>
        <link refid="vector_8c"/>
      </node>
      <node id="14">
        <label>header/vector/remove.c</label>
        <link refid="header_2vector_2remove_8c"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>header/vector/remove.h</label>
        <link refid="remove_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>header/vector/insert.c</label>
        <link refid="header_2vector_2insert_8c"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>header/vector/insert.h</label>
        <link refid="insert_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>header/vector/create.c</label>
        <link refid="header_2vector_2create_8c"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>header/vector/create.h</label>
        <link refid="create_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>header/vector/shift.c</label>
        <link refid="header_2vector_2shift_8c"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>header/vector/shift.h</label>
        <link refid="shift_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>header/vector/common.c</label>
        <link refid="header_2vector_2common_8c"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>header/vector/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>header/vector/move.c</label>
        <link refid="header_2vector_2move_8c"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>header/vector/move.h</label>
        <link refid="move_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>header/vector/comparison.c</label>
        <link refid="header_2vector_2comparison_8c"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>header/vector/comparison.h</label>
        <link refid="comparison_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>source/vector/common.c</label>
        <link refid="source_2vector_2common_8c"/>
      </node>
      <node id="23">
        <label>header/vector/delete.c</label>
        <link refid="header_2vector_2delete_8c"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>header/vector/delete.h</label>
        <link refid="delete_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>header/vector/resize.c</label>
        <link refid="header_2vector_2resize_8c"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>header/vector/resize.h</label>
        <link refid="resize_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>header/vector/debug.c</label>
        <link refid="header_2vector_2debug_8c"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>header/vector/debug.h</label>
        <link refid="debug_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* vector_t</definition>
        <argsstring></argsstring>
        <name>vector_t</name>
        <briefdescription>
<para>Used to indicate a vector with an indeterminate element type. </para>
        </briefdescription>
        <detaileddescription>
<para>This is intended to be used strictly when the element type of a vector is indeterminate (such as when implementing this file) and shouldn&apos;t be used otherwise. Instead a normal C pointer should be used. For example a vector with element type <computeroutput>size_t</computeroutput> should be declared and created with:</para>
<para><programlisting filename=".c"><codeline><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*v_size<sp/>=<sp/><ref refid="create_8h_1ac29016ecf0082276463502be10ac632f" kindref="member">vector_create</ref>();</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="header/vector/common.h" line="21" column="15" bodyfile="header/vector/common.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="common_8h_1ae2e5ca5c0f41f2b0bce39bf1b6631122" prot="public" static="no">
        <type>void const  *</type>
        <definition>typedef void const* vector_c</definition>
        <argsstring></argsstring>
        <name>vector_c</name>
        <briefdescription>
<para>A <ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref> with a <computeroutput>const</computeroutput> element type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="header/vector/common.h" line="24" column="21" bodyfile="header/vector/common.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="common_8h_1aa15669c7ce377e2da885ecace1d69242" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t vector_volume</definition>
        <argsstring>(vector_c vector)</argsstring>
        <name>vector_volume</name>
        <param>
          <type><ref refid="common_8h_1ae2e5ca5c0f41f2b0bce39bf1b6631122" kindref="member">vector_c</ref></type>
          <declname>vector</declname>
        </param>
        <briefdescription>
<para>Return the volume of the <emphasis>vector</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>A vector&apos;s volume is the number of elements that it can hold without a reallocation and should always be greater than or equal to the vector&apos;s <ref refid="common_8h_1a587cb79957c36c5a87216ec27ab5fdbb" kindref="member">length</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="header/vector/common.h" line="91" column="15" bodyfile="header/vector/common.h" bodystart="91" bodyend="93" declfile="header/vector/common.h" declline="33" declcolumn="15"/>
        <referencedby refid="vector_8c_1a28458b3a0c0444009b78fe53a4d42ebc" compoundref="vector_8c" startline="9" endline="27">vector_duplicate_z</referencedby>
        <referencedby refid="header_2vector_2resize_8c_1aca602cd1c36467c4ab8a8a2aa480a4e2" compoundref="header_2vector_2resize_8c" startline="43" endline="60">vector_ensure_z</referencedby>
        <referencedby refid="header_2vector_2remove_8c_1a337078e9e3a9d47d5cec16808fe9afcc" compoundref="header_2vector_2remove_8c" startline="22" endline="44">vector_excise_z</referencedby>
      </memberdef>
      <memberdef kind="function" id="common_8h_1a587cb79957c36c5a87216ec27ab5fdbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t vector_length</definition>
        <argsstring>(vector_c vector)</argsstring>
        <name>vector_length</name>
        <param>
          <type><ref refid="common_8h_1ae2e5ca5c0f41f2b0bce39bf1b6631122" kindref="member">vector_c</ref></type>
          <declname>vector</declname>
        </param>
        <briefdescription>
<para>Return the length of (the number of elements in) the <emphasis>vector</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="header/vector/common.h" line="95" column="15" bodyfile="header/vector/common.h" bodystart="95" bodyend="97" declfile="header/vector/common.h" declline="36" declcolumn="15"/>
        <referencedby refid="access_8h_1a4c6c341fef93a7889eed821ef6189d83" compoundref="access_8h" startline="98" endline="98">vector_tail_z</referencedby>
        <referencedby refid="group__vector__module_1ga93613d2838fd60a1f478f145a7d766db" compoundref="header_2vector_2comparison_8c" startline="31" endline="52">vector_eq_with_z</referencedby>
        <referencedby refid="header_2vector_2debug_8c_1a32f99733e4c0b0fa96eedf1c15b8b249" compoundref="header_2vector_2debug_8c" startline="15" endline="26">vector_debug_z</referencedby>
        <referencedby refid="header_2vector_2insert_8c_1aba8d8fd225d02701f9803ce61989290e" compoundref="header_2vector_2insert_8c" startline="27" endline="54">vector_inject_z</referencedby>
        <referencedby refid="header_2vector_2insert_8c_1a52006f26b6f5a04e2961b3dc667b90a3" compoundref="header_2vector_2insert_8c" startline="56" endline="61">vector_append_z</referencedby>
        <referencedby refid="header_2vector_2insert_8c_1af3a00f1cf9b7d97899239f6d22e8bf51" compoundref="header_2vector_2insert_8c" startline="63" endline="69">vector_extend_z</referencedby>
        <referencedby refid="header_2vector_2remove_8c_1a337078e9e3a9d47d5cec16808fe9afcc" compoundref="header_2vector_2remove_8c" startline="22" endline="44">vector_excise_z</referencedby>
        <referencedby refid="header_2vector_2remove_8c_1a0858e4516313dfe2716b272e0ad6569f" compoundref="header_2vector_2remove_8c" startline="46" endline="49">vector_truncate_z</referencedby>
        <referencedby refid="header_2vector_2resize_8c_1ae01643697d1f29ca15775f32bc62b525" compoundref="header_2vector_2resize_8c" startline="35" endline="41">vector_shrink_z</referencedby>
        <referencedby refid="group__vector__module_1gac688a8f438657eb30088adccc3a14bb6" compoundref="header_2vector_2search_8c" startline="27" endline="38">vector_find_next_z</referencedby>
        <referencedby refid="header_2vector_2shift_8c_1a2328c81eefb3798ffc7c591f22ffe590" compoundref="header_2vector_2shift_8c" startline="16" endline="20">vector_pull_z</referencedby>
        <referencedby refid="group__vector__module_1ga067d26fd8360e1460ff64a088dd87864" compoundref="header_2vector_2sort_8c" startline="16" endline="21">vector_sort_z</referencedby>
        <referencedby refid="vector_8c_1a28458b3a0c0444009b78fe53a4d42ebc" compoundref="vector_8c" startline="9" endline="27">vector_duplicate_z</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">///<sp/>@file<sp/>header/vector/common.h</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VECTOR_COMMON_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VECTOR_COMMON_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdalign.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Used<sp/>to<sp/>indicate<sp/>a<sp/>vector<sp/>with<sp/>an<sp/>indeterminate<sp/>element<sp/>type</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>intended<sp/>to<sp/>be<sp/>used<sp/>strictly<sp/>when<sp/>the<sp/>element<sp/>type<sp/>of<sp/>a<sp/>vector<sp/>is</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>indeterminate<sp/>(such<sp/>as<sp/>when<sp/>implementing<sp/>this<sp/>file)<sp/>and<sp/>shouldn&apos;t<sp/>be<sp/>used</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>otherwise.<sp/>Instead<sp/>a<sp/>normal<sp/>C<sp/>pointer<sp/>should<sp/>be<sp/>used.<sp/>For<sp/>example<sp/>a<sp/>vector</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>with<sp/>element<sp/>type<sp/>@c<sp/>size_t<sp/>should<sp/>be<sp/>declared<sp/>and<sp/>created<sp/>with:</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>@code{.c}</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/>size_t<sp/>*v_size<sp/>=<sp/>vector_create();</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="common_8h_1a5b7d6c2eb384dea49554e889ad2740ad" kindref="member">vector_t</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment">///<sp/>A<sp/>@ref<sp/>vector_t<sp/>with<sp/>a<sp/>@c<sp/>const<sp/>element<sp/>type</highlight></codeline>
<codeline lineno="24" refid="common_8h_1ae2e5ca5c0f41f2b0bce39bf1b6631122" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="common_8h_1ae2e5ca5c0f41f2b0bce39bf1b6631122" kindref="member">vector_c</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Return<sp/>the<sp/>volume<sp/>of<sp/>the<sp/>@a<sp/>vector</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>A<sp/>vector&apos;s<sp/>volume<sp/>is<sp/>the<sp/>number<sp/>of<sp/>elements<sp/>that<sp/>it<sp/>can<sp/>hold<sp/>without<sp/>a</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>reallocation<sp/>and<sp/>should<sp/>always<sp/>be<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>the<sp/>vector&apos;s</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>@length.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="common_8h_1aa15669c7ce377e2da885ecace1d69242" kindref="member">vector_volume</ref>(<ref refid="common_8h_1ae2e5ca5c0f41f2b0bce39bf1b6631122" kindref="member">vector_c</ref><sp/>vector)<sp/>__attribute__((nonnull,<sp/>pure));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="35"><highlight class="comment">///<sp/>Return<sp/>the<sp/>length<sp/>of<sp/>(the<sp/>number<sp/>of<sp/>elements<sp/>in)<sp/>the<sp/>@a<sp/>vector</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="common_8h_1a587cb79957c36c5a87216ec27ab5fdbb" kindref="member">vector_length</ref>(<ref refid="common_8h_1ae2e5ca5c0f41f2b0bce39bf1b6631122" kindref="member">vector_c</ref><sp/>vector)<sp/>__attribute__((nonnull,<sp/>pure));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="38"><highlight class="comment">///<sp/>@cond<sp/>INTERNAL</highlight></codeline>
<codeline lineno="39"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="40"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Return<sp/>the<sp/>element<sp/>size<sp/>of<sp/>the<sp/>@a<sp/>vector</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>The<sp/>element<sp/>size<sp/>is<sp/>determined<sp/>from<sp/>the<sp/>type<sp/>of<sp/>@a<sp/>vector<sp/>itself<sp/>with<sp/>a</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>calculation<sp/>similar<sp/>to<sp/>&lt;code&gt;sizeof((vector)[0])&lt;/code&gt;.<sp/>As<sp/>such<sp/>to<sp/>use<sp/>this</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>@a<sp/>vector<sp/>must<sp/>already<sp/>be<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>complete<sp/>type.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>The<sp/>element<sp/>size<sp/>of<sp/>a<sp/>vector<sp/>isn&apos;t<sp/>recorded<sp/>in<sp/>the<sp/>vector<sp/>itself.<sp/>This</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>calculates<sp/>the<sp/>element<sp/>size<sp/>of<sp/>the<sp/>@a<sp/>vector<sp/>from<sp/>the<sp/>pointer<sp/>type<sp/>of<sp/>the<sp/>@a</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>vector<sp/>itself<sp/>(similar<sp/>to<sp/>&lt;code&gt;sizeof((vector)[0])&lt;/code&gt;).<sp/>Thus<sp/>@a<sp/>vector</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>must<sp/>be<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>complete<sp/>type.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>almost<sp/>identical<sp/>to<sp/>&lt;code&gt;sizeof((vector)[0])&lt;/code&gt;.<sp/>However<sp/>in<sp/>GNU</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>C<sp/>(and<sp/>similar<sp/>implementations)<sp/>the<sp/>@c<sp/>sizeof(void)<sp/>is<sp/>@c<sp/>1<sp/>(despite<sp/>the<sp/>fact</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>that<sp/>@c<sp/>void<sp/>is<sp/>an<sp/>incomplete<sp/>type).<sp/>Because<sp/>a<sp/>@ref<sp/>vector_t<sp/>is<sp/>defined<sp/>as</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>&lt;code&gt;void<sp/>*&lt;/code&gt;<sp/>this<sp/>raises<sp/>a<sp/>compiler<sp/>error<sp/>when<sp/>@a<sp/>vector<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>@ref<sp/>vector_t.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>This<sp/>macro<sp/>doesn&apos;t<sp/>evaluate<sp/>@a<sp/>vector.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VECTOR_Z(vector)<sp/>sizeof({<sp/>__typeof__((vector)[0])<sp/>__x;<sp/>__x;<sp/>})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="62"><highlight class="comment">///<sp/>The<sp/>header<sp/>of<sp/>a<sp/>@ref<sp/>vector_t<sp/>or<sp/>@ref<sp/>vector_c</highlight></codeline>
<codeline lineno="63"><highlight class="comment"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__vector_header_t<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>volume;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(max_align_t)<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data[];</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="69"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Return<sp/>the<sp/>header<sp/>associated<sp/>with<sp/>the<sp/>@a<sp/>vector</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>is<sp/>@a<sp/>const<sp/>qualified<sp/>on<sp/>the<sp/>@a<sp/>vector.<sp/>That<sp/>is<sp/>if<sp/>the<sp/>element</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>type<sp/>of<sp/>the<sp/>@a<sp/>vector<sp/>is<sp/>@c<sp/>const<sp/>qualified<sp/>(@a<sp/>vector<sp/>is<sp/>compatible<sp/>with<sp/>a</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>@ref<sp/>vector_c),<sp/>this<sp/>will<sp/>return<sp/>a<sp/>&lt;tt&gt;const<sp/>struct<sp/>__vector_header_t<sp/>*&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>Otherwise<sp/>this<sp/>will<sp/>return<sp/>a<sp/>&lt;tt&gt;struct<sp/>__vector_header_t<sp/>*&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__vector_to_header(vector)<sp/>({<sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/>_Pragma(&quot;GCC<sp/>diagnostic<sp/>push&quot;);<sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"><sp/><sp/>_Pragma(&quot;GCC<sp/>diagnostic<sp/>ignored<sp/>\&quot;-Wcast-align\&quot;&quot;);<sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/>_Pragma(&quot;GCC<sp/>diagnostic<sp/>ignored<sp/>\&quot;-Wcast-qual\&quot;&quot;);<sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/>_Generic((vector),<sp/>vector_t:<sp/>(struct<sp/>__vector_header_t<sp/>*)<sp/>(<sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="preprocessor"><sp/>char<sp/>*)<sp/>(vector)<sp/>-<sp/>offsetof(struct<sp/>__vector_header_t,<sp/>data)<sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>),<sp/>vector_c:<sp/>(const<sp/>struct<sp/>__vector_header_t<sp/>*)<sp/>(<sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>char<sp/>*)<sp/>(vector)<sp/>-<sp/>offsetof(struct<sp/>__vector_header_t,<sp/>data)<sp/>\</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>));<sp/>\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/>_Pragma(&quot;GCC<sp/>diagnostic<sp/>pop&quot;)<sp/>\</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor">})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="89"><highlight class="comment">///<sp/>@endcond</highlight></codeline>
<codeline lineno="90"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="common_8h_1aa15669c7ce377e2da885ecace1d69242" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="common_8h_1aa15669c7ce377e2da885ecace1d69242" kindref="member">vector_volume</ref>(<ref refid="common_8h_1ae2e5ca5c0f41f2b0bce39bf1b6631122" kindref="member">vector_c</ref><sp/>vector)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__vector_to_header(vector)-&gt;volume;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="common_8h_1a587cb79957c36c5a87216ec27ab5fdbb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="common_8h_1a587cb79957c36c5a87216ec27ab5fdbb" kindref="member">vector_length</ref>(<ref refid="common_8h_1ae2e5ca5c0f41f2b0bce39bf1b6631122" kindref="member">vector_c</ref><sp/>vector)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__vector_to_header(vector)-&gt;length;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VECTOR_COMMON_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VECTOR_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="source_2vector_2common_8c" kindref="compound">common.c</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VECTOR_TEST<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="header/vector/common.h"/>
  </compounddef>
</doxygen>
